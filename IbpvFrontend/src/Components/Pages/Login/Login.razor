<!--  rota da pagina -->
@page "/"
@inject ILoginService LoginService
@inject NavigationManager Navigation
@layout EmptyLayout
@rendermode InteractiveServer




<PageTitle>Login</PageTitle> 

<AuthorizeView>  
    <NotAuthorized>
        <div class="vh-100 d-flex align-items-center  justify-content-center">
            <div class="container-fluid col-md-4">
                <form>
                    <div class="mb-3">
                        <div class=" d-flex flex-row"> 
                            <label for="exampleInputEmail1" class="form-label mr-4">Endereço de Email</label>
                            <p class="text-danger px-lg-2">@PErrorEmail</p>
                        </div>
                        <input type="email" class="form-control" id="exampleInputEmail1" @bind="@inputEmail" autocomplete="on">
                    </div>
                    <div class="mb-3">
                        <div class=" d-flex flex-row"> 
                            <label for="exampleInputPassword1" class="form-label">Senha</label>
                            <p class="text-danger px-lg-2">@PErrorSenha</p>
                        </div>
                        <input type="password" class="form-control" id="exampleInputPassword1" @bind="@inputSenha" autocomplete="on">
                    </div>
                    <div class="mb-3 form-check ">
                        <input type="checkbox" class="form-check-input" id="exampleCheck1" @bind="@lembrarSenha">
                        <label class="form-check-label" for="exampleCheck1">Lembrar minha senha</label>
                    </div>
                    <div class="d-flex flex-column align-items-center">
                        <button type="button" class="btn btn-primary w-100"@onclick = "VerifyDataAndLogin">Entrar</button>
                        <span class = "mt-2" style="color: blue; cursor: pointer; text-decoration: none;" onmouseover="this.style.color='darkblue'; this.style.textDecoration='underline';" onmouseout="this.style.color='blue'; this.style.textDecoration='none';">Esqueci minha senha</span>
                    </div>
                </form>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

   
  
@code{
    @* protected override async Task OnInitializedAsync()
    {
       
    } *@

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var state = await LoginService.getUserLoginState();
        if(state.User.Identity is not null)
        {   
            if(state.User.Identity.IsAuthenticated )
            {   
                 Navigation.NavigateTo("/home");
            }     
        }
    }
    //manipular as variaveis valores dos inputs
    private string? inputEmail;
    private string? inputSenha;
    private bool lembrarSenha;


    //valores dos <p> que carregam a mensagem de erro
     private string? PErrorEmail;
     private string? PErrorSenha;

   
    //metodo para executar o login chamando o serviço
    private  async void  VerifyDataAndLogin(){

        PErrorEmail = "";
        PErrorSenha = "";
        
        //verifica se esta vazio os inputs
        if(string.IsNullOrEmpty(inputEmail))
        {
             PErrorEmail = "É nescessario inserir um Email";
        }
  

        else if(string.IsNullOrEmpty(inputSenha))
        {
             PErrorSenha = "É nescessario inserir uma senha";
        }

        else
        {
            //solicita o login
            LoginDTO  login = new LoginDTO{
                gmail = inputEmail!,
                senha = inputSenha!
            };
            
            //verifico se o login deu certo
            if(await LoginService.login(login))
            {   
                 Navigation.NavigateTo("/home");
            }

            else 
 
            {
                PErrorEmail = "Usuario ou senha inválidos";
                PErrorSenha = "Usuario ou senha inválidos";
            }
            
            StateHasChanged();
        }
    }
}

